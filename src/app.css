@import './global.css';

@font-face {
    font-family: 'gagliostro';
    src: url('./assets/fonts/gagliostro/Cagliostro-Regular.ttf') format('truetype');
}

@font-face {
    font-family: 'Gwendolyn-Bold';
    src: url('./assets/fonts/Gwendolyn/Gwendolyn-Bold.ttf') format('truetype');
}

:root {
    --color-hover: rgb(214, 180, 153);
    --color-body-background: rgb(242, 237, 226);
    --color-sidebar-background: rgb(226, 209, 187);
    --color-liner-background: rgb(208, 208, 208);
    --color-text: black;
    --color-chosen: rgb(220, 171, 135);
    --color-task-background: white;
    --color-task-gradient: rgb(208, 208, 208);

    /* Dark mode variables  */
    --dark-color-hover: rgb(80, 80, 80);
    --dark-color-body-background: rgb(30, 30, 30);
    --dark-color-sidebar-background: rgb(20, 20, 20);
    --dark-color-text: white;
    --dark-color-task-background: rgb(55, 55, 55);
    --dark-color-task-gradient: rgb(60, 60, 60);
}

p {
    margin-bottom: 0;
}

body {
    position: relative;
    display: flex;
    min-height: 100vh;
    font-family: gagliostro;
    background-color: var(--color-body-background);
    color: var(--color-text);
}

.sidebar {
    display: grid;
    grid-template-rows: repeat(4, auto) 1fr;
    flex: 1;
    max-width: 25rem;
    padding: 0 0.5rem;
    gap: 1rem;
    background-color: var(--color-sidebar-background);
}

.sidebar .imageContainer {
    padding-top: 0.25rem;
    width: 2rem;
}

.logo {
    display: flex;
    gap: 0.2rem;
    align-items: center;
}

.logo>p {
    font: 2.5rem Gwendolyn-Bold;
}

.logo>.imageContainer {
    width: 4rem;
    padding-top: 0.5rem;
}

.imageContainer>img {
    height: 100%;
    object-fit: contain;
}

.addTask>.imageContainer>img,
.sidebar .chosen>.imageContainer>img {
    filter: brightness(0) saturate(100%) invert(26%) sepia(100%) saturate(700%) hue-rotate(-9deg) brightness(95%) contrast(93%);
}

.tasks,
.projects,
.templates {
    display: grid;
    padding: var(--list-padding-top) 0.5rem;
}

.tasks>*,
.projects>*,
.templates>* {
    display: flex;
    align-items: center;
    height: 3.5rem;
    padding: 0.5rem 0 0.5rem 1rem;
    gap: 1.2rem;
    border-radius: 0.5rem;
    font-size: 1.2rem;
}

.projects>.sidebarTitle>.iconButtonContainer:hover {
    cursor: pointer;
}

.tasks>div:hover,
.projects>.project:hover,
.templates>.template:hover {
    background-color: var(--color-hover);
    cursor: pointer;
}

.tasks>div.chosen,
.projects>.project.chosen {
    background-color: var(--color-chosen);
}

.project>.projectTitle {
    flex: 1;
    display: flex;
    align-items: center;
    gap: 1rem;
}

.project>.projectTitle>p {
    display: block;
    max-width: 8.5rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.contentEditable>.projectTitle>p {
    background-color: var(--color-light-grey);
}

.project>.iconButtonContainer {
    display: flex;
    gap: 0.2rem;
}

.sidebarTitle {
    justify-content: space-between;
}

.sidebarTitle>.iconButtonContainer {
    padding-top: 0.5rem;
}

.user:hover {
    cursor: pointer;
}

.container {
    flex: 3.5;
    display: grid;
    grid-template-rows: auto 1fr;
    padding: 0.3rem;
}

nav {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 0.5rem;
}

nav>.clock {
    font-size: 1.3rem;
}

nav>div {
    position: relative;
}

.user {
    display: flex;
    justify-content: space-around;
    align-items: center;
    min-width: 8rem;
}

.userProfileContainer {
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    overflow: hidden;
    position: relative;
}

.userProfileContainer img {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    transform: translate(-50%, -50%);
    object-fit: cover;
}

.username {
    padding: 1rem;
}

.settings {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    background-color: white;
    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
    z-index: 1;
    width: 100%;
    border-radius: 4px;
    overflow: hidden;
}

.settings>* {
    color: black;
    padding: 12px 16px;
    font-size: 1rem;
    text-decoration: none;
    display: block;
    background: linear-gradient(to top, var(--color-liner-background) 1px, white 1px);
}

.settings>*:last-child {
    background: white;
}

.settings>*:hover {
    cursor: pointer;
    background: var(--color-liner-background);
}

.contentContainer {
    padding-bottom: 0.5rem;
}

.contentContainer>div {
    display: flex;
    flex-direction: column;
    padding: 1rem 5rem;
}

.contentContainer .titleBar {
    display: flex;
    padding-bottom: 0.5rem;
    align-items: baseline;
    gap: 1rem;
}

.contentContainer .addTask {
    display: flex;
    max-width: fit-content;
    padding-top: 0.5rem;
    align-items: center;
    gap: 1rem;
}

.contentContainer .addTask:hover {
    cursor: pointer;
}

.contentContainer .addTask>.imageContainer {
    width: 2rem;
}

.contentContainer .hidden {
    display: none;
}

.reschedule {
    border: none;
    background: none;
    font-size: 1.2rem;
    color: var(--color-chosen);
}

.reschedule:hover {
    cursor: pointer;
}

.contentContainer>div>.task {
    position: relative;
    min-width: 30rem;
    padding: 0.5rem 0;
    border-radius: 0.5rem;
    background: linear-gradient(to top, var(--color-liner-background) 3px, white 3px);
}

.contentEditable {
    border: 2px solid grey;
}

.contentContainer>div>.task:last-child {
    background: white;
}

.task>.iconButtonContainer {
    position: absolute;
    top: 0.2rem;
    right: 0.5rem;
    display: flex;
    gap: 1rem;
}

.task>.iconButtonContainer.blank {
    visibility: hidden;
}

.task>.iconButtonContainer>img {
    width: 1.2rem;
}

.task>.iconButtonContainer>*:hover {
    cursor: pointer;
}

.important>.iconButtonContainer>.likeButton {
    filter: invert(54%) sepia(91%) saturate(748%) hue-rotate(1deg) brightness(105%) contrast(101%);
}

.checked>.iconButtonContainer>.checkButton {
    filter: brightness(0) saturate(100%) invert(35%) sepia(78%) saturate(3350%) hue-rotate(90deg) brightness(92%) contrast(94%);
}

.task>.title {
    font-size: 1.2rem;
    font-weight: bolder;
}

.task>p {
    padding: 0.2rem 1rem;
}

.task span.tag {
    display: inline-block;
    width: 8rem;
}

.task span.content {
    display: inline-block;
    min-width: 80%;
}

.contentEditable span.content {
    background-color: var(--color-light-grey);
}

.task>.buttonContainer {
    display: flex;
    justify-content: center;
}

.task .hidden {
    display: none;
}

.task>.buttonContainer>button {
    margin: 0.5rem;
    padding: 0.3rem 1.2rem;
    color: white;
    background-color: var(--color-blue);
    border: none;
    border-radius: 3px;
}

.task>.buttonContainer>button:hover {
    cursor: pointer;
}

dialog {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 1.5rem;
}

form {
    display: grid;
    grid-template-columns: 1fr;
    place-content: center;
    padding: 0 2rem;
    gap: 1rem;
    width: 28rem;
}

.addTaskDialog>form {
    height: 21rem;
}

.addProjectTaskDialog>form {
    height: 24rem;
}

.setProfileDialog>form {
    height: 16rem;
}

fieldset {
    border: none;
    display: grid;
    grid-template-columns: 1fr;
    place-content: center;
    gap: 1rem;
}

fieldset>* {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
}

fieldset>.group>div {
    display: flex;
    justify-content: center;
}

fieldset>.group input {
    width: 8rem;
}

fieldset>p {
    gap: 1rem;
}

fieldset>div>label {
    width: 6rem;
}

fieldset>div>input {
    flex: 1;
}

form>div {
    place-self: center;
}

form button {
    width: 8rem;
    height: 2.5rem;
    border: none;
    border-radius: 0.5rem;
    color: white;
    font-size: 1rem;
    background-color: var(--color-blue);
}

form button:hover {
    cursor: pointer;
}

.inValid {
    border: 1px solid red;
}

/* Dark mode styles */
body.darkMode {
    background-color: var(--dark-color-body-background);
    color: var(--dark-color-text);
}

body.darkMode .sidebar {
    background-color: var(--dark-color-sidebar-background);
}

body.darkMode .imageContainer>img,
body.darkMode .iconButtonContainer>img {
    filter: brightness(0) invert(1);
}

body.darkMode .tasks>div:hover,
body.darkMode .projects>.project:hover,
body.darkMode .templates>.template:hover {
    background-color: var(--dark-color-hover);
}

body.darkMode .settings>* {
    color: white;
    background: linear-gradient(to top, var(--dark-color-hover) 1px, var(--color-chosen) 1px);
}

body.darkMode .settings>*:hover {
    background: var(--dark-color-hover);
}

body.darkMode .contentContainer>div>.task {
    background: linear-gradient(to top, var(--dark-color-task-gradient) 3px, var(--dark-color-task-background) 3px);
}

body.darkMode .contentContainer>div>.task:last-child {
    background: var(--dark-color-task-background);
}

body.darkMode .contentEditable span.content {
    background-color: var(--dark-color-task-gradient);
}

/* For screens smaller than 768px (e.g., phones) */
@media only screen and (max-width: 768px) {
    body {
        flex-direction: column;
        font-size: 0.8rem;
    }

    .sidebar {
        grid-template-columns: repeat(4, auto) 1fr;
    }

    .sidebar {
        max-width: 100%;
        padding: 0;
    }

    .container {
        padding: 0;
    }

    nav {
        flex-direction: column;
        padding: 0.5rem;
    }

    .contentContainer>div {
        padding: 0.5rem;
    }

    .task {
        min-width: 100%;
        padding: 0.2rem 0;
    }
}

/* For screens between 768px and 1024px (e.g., tablets) */
@media only screen and (min-width: 769px) and (max-width: 1024px) {
    .sidebar {
        max-width: 20rem;
        padding: 0 0.3rem;
    }

    .container {
        padding: 0.2rem;
    }

    nav {
        padding: 0.3rem;
    }

    .contentContainer>div {
        padding: 0.5rem 3rem;
    }

    .task {
        min-width: 25rem;
    }
}

/* For screens larger than 1920px (e.g., high-resolution desktops) */
@media only screen and (min-width: 1921px) {
    body {
        font-size: 1.2rem;
    }

    .sidebar {
        max-width: 30rem;
        padding: 0 1rem;
    }

    .container {
        padding: 0.5rem;
    }

    nav {
        padding: 0 1rem;
    }

    .contentContainer>div {
        padding: 2rem 10rem;
    }

    .task {
        min-width: 35rem;
    }
}
